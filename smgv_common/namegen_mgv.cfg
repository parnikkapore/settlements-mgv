// Town names from mg_villages. Namegen algorithm is approximate.
// Author: Sokomine
name "settlement_mgv" {
  syllablesStart = "Ac, Ast, Lang, Pen, Shep, Ship"

  syllablesMiddle = "a, an, ab, ac, am, be, ba, bi, bl, bm, bn, bo, br, bst, bu, ca, ce, ch, ci, ck, cl, cm, cn, co, cv, da, de, df, di, dl, dm, dn, do, dr, ds, dt, du, dv, do, ren, nav, ben, ada, min, org, san, pa, re, ne, en, er, ich, the, and, tha, ent, ing, ion, tio, for, nde, has, nce, edt, tis, oft, sth, mem, ich, ein, und, der, nde, sch, die, den, end, cht, the, and, tha, ent, ing, ion, for, de, has, ce, ed, is, ft, sth, mem, ch, ei, un, der, ie, den, end, do, ren, nav, ben, ada, min, org, san, pa, re, ne, en, er, ich, ta, bek, nik, le, lan, nem, bal, cir, da, en, fan, fir, fern, fa, oak, nut, gen, ga, hu, hi, hal, in, ig, ir, im, ja, je, jo, kla, kon, ker, log, lag, leg, lil, lon, las, leve, lere, mes, mir, mon, mm, mer, mig, na, nn, nerv, neu, oto, on, opt, oll, ome, ott, pen, par, pi, pa, po, pel, pig, qu, ren, rig, raf, res, ring, rib, rast, rost, ru, rum, rem, sem, sim, su, spring, cotton, cot, wood, palm, do, na, ik, ke, gen, bra, bn, lla, lle, st, aa, kir, nn, en, fo, fn, gi, ja, jn, ke, kr, kon, lis, on, ok, or, op, pp, p, qu, re, ra, rn, ri, so, sn, se, ti, tu, a, e, i, o, u, re, ro, pe, pn, ci, co, cl, no, en, wi, we, er, en, ba, ki, nn, va, wu, x, tel, or, so, me, mi, em, en, eg, ge, kn"

  // syllablesMiddle but capitalized
  customGroupM = "A, An, Ab, Ac, Am, Be, Ba, Bi, Bl, Bm, Bn, Bo, Br, Bst, Bu, Ca, Ce, Ch, Ci, Ck, Cl, Cm, Cn, Co, Cv, Da, De, Df, Di, Dl, Dm, Dn, Do, Dr, Ds, Dt, Du, Dv, Do, Ren, Nav, Ben, Ada, Min, Org, San, Pa, Re, Ne, En, Er, Ich, The, And, Tha, Ent, Ing, Ion, Tio, For, Nde, Has, Nce, Edt, Tis, Oft, Sth, Mem, Ich, Ein, Und, Der, Nde, Sch, Die, Den, End, Cht, The, And, Tha, Ent, Ing, Ion, For, De, Has, Ce, Ed, Is, Ft, Sth, Mem, Ch, Ei, Un, Der, Ie, Den, End, Do, Ren, Nav, Ben, Ada, Min, Org, San, Pa, Re, Ne, En, Er, Ich, Ta, Bek, Nik, Le, Lan, Nem, Bal, Cir, Da, En, Fan, Fir, Fern, Fa, Oak, Nut, Gen, Ga, Hu, Hi, Hal, In, Ig, Ir, Im, Ja, Je, Jo, Kla, Kon, Ker, Log, Lag, Leg, Lil, Lon, Las, Leve, Lere, Mes, Mir, Mon, Mm, Mer, Mig, Na, Nn, Nerv, Neu, Oto, On, Opt, Oll, Ome, Ott, Pen, Par, Pi, Pa, Po, Pel, Pig, Qu, Ren, Rig, Raf, Res, Ring, Rib, Rast, Rost, Ru, Rum, Rem, Sem, Sim, Su, Spring, Cotton, Cot, Wood, Palm, Do, Na, Ik, Ke, Gen, Bra, Bn, Lla, Lle, St, Aa, Kir, Nn, En, Fo, Fn, Gi, Ja, Jn, Ke, Kr, Kon, Lis, On, Ok, Or, Op, Pp, P, Qu, Re, Ra, Rn, Ri, So, Sn, Se, Ti, Tu, A, E, I, O, U, Re, Ro, Pe, Pn, Ci, Co, Cl, No, En, Wi, We, Er, En, Ba, Ki, Nn, Va, Wu, X, Tel, Or, So, Me, Mi, Em, En, Eg, Ge, Kn"
  
  syllablesEnd = "beck, ey, ay, bury, burgh, brough, by, by, caster, cester, cum, den, don, field, firth, ford, ham, ham, ham, hope, ing, kirk, hill, law, leigh, mouth, ness, pool, shaw, stead, ster, tun, ton, ton, ton, ton, wold, worth, worthy, ville, river, forrest, lake"

  rules = "%5$s$50m$50m$50m$e, %20$s$m$50m$50m$50m, %50$M$50m$50m$50m$e, $M$m$50m$50m$50m"
  // rules = "$70m$70m$70m$70m$70m"
}
